version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: latest
    commands:
      # Install dependencies needed for application
      - cd app
      - npm install
      - cd ..

      # Upgrade AWS CLI to the latest version
      - pip install --upgrade awscli
  
  pre_build:
    commands:

      # Generate Key in SSM for cache-proxy
      - chmod a+x tools/generate-put-keys.sh
      - tools/generate-put-keys.sh $PARAM_STORE_PATH "256" $AWS_REGION $AWS_ACCOUNT #keylength needs to correspond with default (or override) specified for CryptSecureDataAlg in template.yml

  build:
    commands:

      # Use CloudFormation to package the application infrastructure and code that was placed in the S3 Deploy Bucket
      - aws cloudformation package --template template.yml --s3-bucket $S3_DEPLOY_BUCKET --output-template template-export.yml

      # Do a search/replace using the linux sed command in the template-configuration.json file so AWS CloudFormation can tag project resources.
      - sed -i.bak 's|\$AWS_PARTITION\$|'${AWS_PARTITION}'|g;s|\$AWS_REGION\$|'${AWS_REGION}'|g;s|\$AWS_ACCOUNT\$|'${AWS_ACCOUNT}'|g;s|\$PREFIX\$|'${PREFIX}'|g;s|\$PROJECT_ID\$|'${PROJECT_ID}'|g;s|\$STAGE_ID\$|'${STAGE_ID}'|g;s|\$REPOSITORY\$|'${REPOSITORY}'|g;s|\$REPOSITORY_BRANCH\$|'${REPOSITORY_BRANCH}'|g;s|\$DEPLOY_ENVIRONMENT\$|'${DEPLOY_ENVIRONMENT}'|g;s|\$ALARM_NOTIFICATION_EMAIL\$|'${ALARM_NOTIFICATION_EMAIL}'|g' template-configuration.json

      # You can add additional tags and parameters to template-configuration.json

artifacts:
  files:
    - template-export.yml
    - template-configuration.json