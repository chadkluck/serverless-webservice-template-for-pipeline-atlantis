# This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, 
# either express or implied. See the License for the specific language governing permissions 
# and limitations under the License.
#
# Web Service CloudFormation Application Infrastructure Template - FULL w/ npm @chadkluck/cache-data integration
# Chad Leigh Kluck
# v2.2024-06-02 FULL w/ npm @chadkluck/cache-data integration
# 
# NOTE: As of v2 this template no longer supports CodeStar and Parameters have been refactored.
#
# USAGE/MORE INFO: https://github.com/chadkluck/serverless-webservice-template-for-pipeline-atlantis/blob/main/README.md

AWSTemplateFormatVersion: "2010-09-09"
Transform:  "AWS::Serverless-2016-10-31"
Description: "Web Service API"

# =============================================================================
# META DATA
# -----------------------------------------------------------------------------
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-interface.html
# 

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - 
        Label:
          default: "Application Resource Naming"
        Parameters:
          - Prefix
          - ProjectId
          - StageId
          - S3BucketNameOrgPrefix
          - RolePath
      -
        Label:
          default: "Deployment Environment Identification"
        Parameters:
          - DeployEnvironment
          - FunctionGradualDeploymentType
          - DeployRole
      -
        Label:
          default: "External Resources and Alarm Notifications"
        Parameters:
          - ParameterStoreHierarchy
          - AlarmNotificationEmail
          - PermissionsBoundaryARN
      -
        Label:
          default: "Lambda Function Settings"
        Parameters:
          - FunctionTimeOutInSeconds
          - FunctionMaxMemoryInMB
      -
        Label:
          default: "Application Parameters"
        Parameters:
          - ApiPathBase
          - LogRetentionInDaysForPROD
          - LogRetentionInDaysForDEVTEST
          - UserAgent
      -
        Label:
          default: "Cache-Data Parameters"
        Parameters:
          - CacheDataDbMaxCacheSizeInKB
          - CacheDataCryptIdHashAlgorithm
          - CacheDataCryptSecureDataAlg
          - CacheDataErrorExpirationInSeconds
          - CacheDataPurgeExpiredCacheEntriesInHours
          - CacheDataPurgeAgeOfCachedBucketObjInDays
          - CacheDataTimeZoneForInterval
          - CacheDataAWSXRayOn

# =============================================================================
# PARAMETERS
# -----------------------------------------------------------------------------
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/parameters-section-structure.html
#

Parameters:

  # ---------------------------------------------------------------------------
  # Application Resource Naming

  Prefix:
    Type: String
    Description: "Prefix pre-pended to all resources. This can be thought of as a Name Space used to identify ownership/access for teams, departments, etc. For example, resources named ws-* could belong to the web service team and could have IAM permissions to allow access to other ws-* resources. The Prefix must have a corresponding CloudFormation Service Role. Short, descriptive 2-6 character values work best. Due to resource naming length restrictions, length of Prefix + Project ID should not exceed 28 characters. Resources are named <Prefix>-<ProjectId>-<StageId>-<ResourceId>"
    Default: "acme" 
    AllowedPattern: "^[a-z][a-z0-9-]{0,6}[a-z0-9]$"
    MinLength: 2
    MaxLength: 8
    ConstraintDescription: "2 to 8 characters. Lower case alphanumeric and dashes. Must start with a letter and end with a letter or number. Length of Prefix + Project ID should not exceed 28 characters."
  ProjectId:
    Type: String
    Description: "This is the Project or Application Identifier. If you receive 'S3 bucket name too long' errors during stack creation, then you must shorten the Project ID or use an S3 Org Prefix. Due to resource naming length restrictions, length of Prefix + Project ID should not exceed 28 characters. Resources are named <Prefix>-<ProjectId>-<StageId>-<ResourceId>"
    AllowedPattern: "^[a-z][a-z0-9-]{0,24}[a-z0-9]$"
    MinLength: 2
    MaxLength: 26
    ConstraintDescription: "Minimum of 2 characters (suggested maximum of 20). Lower case alphanumeric and dashes. Must start with a letter and end with a letter or number. Length of Prefix + Project ID should not exceed 28 characters."
  StageId:
    Type: String
    Description: "This is an alias for the branch. It does not need to match CodeCommitBranch or DeployEnvironment. Due to resource naming restrictions you can use this to provide shorter names without special characters that are allowed in branch names. For example if you have a 'test/feature-98' branch, you could use 'tf98' as the StageId. Resources are named <Prefix>-<ProjectId>-<StageId>-<ResourceId>"
    AllowedPattern: "^[a-z][a-z0-9-]{0,6}[a-z0-9]$"
    MinLength: 2
    MaxLength: 8
    ConstraintDescription: "2 to 8 characters. Lower case alphanumeric and dashes. Must start with a letter and end with a letter or number."
  S3BucketNameOrgPrefix:
    Type: String
    Description: "By default, to enforce uniqueness, buckets include account and region in the bucket name. However, due to character limits, you can specify your own S3 prefix (like an org code). This will be used in addition to the Prefix entered above. Note that this length is shared with the recommended length of 20 characters for Resource Identifiers. So if you have a 10 character S3BucketNameOrgPrefix, you are limited to 10 characters for your bucket name identifier in your templates. Buckets are named <Prefix>-<Region>-<AccountId>-<ProjectId>-<StageId>-<ResourceId> or <S3OrgPrefix>-<Prefix>-<ProjectId>-<StageId>-<ResourceId>"
    Default: ""
    AllowedPattern: "^[a-z0-9][a-z0-9-]{0,18}[a-z0-9]$|^$"
    ConstraintDescription: "May be empty or 2 to 20 characters (8 or less recommended). Lower case alphanumeric and dashes. Must start and end with a letter or number."
  RolePath:
    Type: String
    Description: "Path to use for IAM Roles and Policies. You may wish to separate out your applications from users, or create seperate paths per prefix or application. Specific paths may required by permission boundaries. Ex: /ws-hello-world-test/ or /app_role/"
    Default: "/"
    AllowedPattern: "^\\/([a-zA-Z0-9-_]+[\\/])+$|^\\/$"
    ConstraintDescription: "May only contain alphanumeric characters, forward slashes, underscores, and dashes. Must begin and end with a slash."

  # ---------------------------------------------------------------------------
  # Deployment Environment

  DeployEnvironment:
    Type: String
    Description: "What deploy/testing environment will this run under? An environment can contain multiple stages (for example 'test' and 't98' would be in 'TEST' environment, and 'beta' and 'prod' stages would deploy to 'PROD'). Utilize this environment variable to determine your tests, app logging levels, and conditionals in the template. For example, PROD will use gradual deployment while DEV and TEST is AllAtOnce. Other resources, such as dashboards and alarms  (which cost money) could be created in PROD and not DEV or TEST. Suggested use: DEV for local SAM deployment, TEST for test/QA deployments, PROD for stage, beta, and main/prod deployments."
    Default: "PROD"
    AllowedValues: ["DEV", "TEST", "PROD"]
    ConstraintDescription: "Must specify DEV, TEST, or PROD."

  FunctionGradualDeploymentType:
    Type: String
    Description: "For production environments, what method do you want to use to gradually deploy before rolling back in case of errors. Note that when 'DeployEnvironment' is TEST or DEV, gradual deploy will not be enabled and will be same as All At Once"
    Default: "Linear10PercentEvery3Minutes"
    AllowedValues:
      - "Canary10Percent5Minutes" # Canary = First 10%, then after x minutes, full 90% (full deploy after x minutes)
      - "Canary10Percent10Minutes"
      - "Canary10Percent15Minutes"
      - "Canary10Percent30Minutes"
      - "Linear10PercentEvery1Minute" # Linear = Total of 10 deploys every x minutes: 10%, wait x minutes, another 10%, wait, 10%.... (full deploy after 10 * x minutes)
      - "Linear10PercentEvery2Minutes"
      - "Linear10PercentEvery3Minutes"
      - "Linear10PercentEvery10Minutes"
      - "AllAtOnce" # All at once. Recommended only for TEST and DEV environments.
  DeployRole:
    Type: String
    Description: "IAM role to allow AWS CodeDeploy to manage deployment of AWS Lambda functions"

  # ---------------------------------------------------------------------------
  # External Resources and Alarm Notifications

  ParameterStoreHierarchy:
    Type: String
    Description: "Parameters specific to the application may be organized within a hierarchy based on your organizational or operations structure. For example, /Finance/ops/ for this value would then generate /Finance/ops/<DeployEnvironment>/<Prefix>-<ProjectId>-<StageId>/<parameterName>. Must either be a single '/' or begin and end with a '/'."
    Default: "/"
    AllowedPattern: "^\\/([a-zA-Z0-9_.\\-]*[\\/])+$|^\\/$"
    ConstraintDescription: "Must only contain alpha-numeric, dashes, underscores, or slashes. Must be a single slash or begin and end with a slash. (/Finance/, /Finance/ops/, or /)"
  AlarmNotificationEmail:
    Type: String
    Description: "Email address to send notifications to when alarms are triggered. Be sure to check the inbox as you will need to confirm the subscription."
    AllowedPattern: "^[\\w\\-\\.]+@([\\w\\-]+\\.)+[\\w\\-]{2,4}$"
    ConstraintDescription: "A valid email address"
  PermissionsBoundaryARN:
    Type: String
    Description: "Permissions Boundary is a policy attached to a role to further restrict the permissions of the role. Your organization may or may not require boundaries. If left empty, no permissions boundary will be used."
    Default: ""
    AllowedPattern: "^$|^arn:aws:iam::\\d{12}:policy\\/[\\w+=,.@\\-\\/]*[\\w+=,.@\\-]+$"
    ConstraintDescription: "Must be empty or a valid IAM Policy ARN in the format: arn:aws:iam::{account_id}:policy/{policy_name}"

  # ---------------------------------------------------------------------------
  # Lambda Function Settings

  FunctionTimeOutInSeconds:
    Type: Number
    Description: "Time out in seconds for the Lambda function. API Gateway times out after 30 seconds. This web service is ideal for requests that can complete in less than 10 seconds"
    Default: 10
    MinValue: 3
    MaxValue: 30
  FunctionMaxMemoryInMB:
    Type: Number
    Description: "If you are handling large responses, you will need to increase the size. Monitor CloudWatch logs"
    Default: 128
    AllowedValues: [128, 192, 256, 320, 384, 448, 512]
    ConstraintDescription: "Min 128, Max 512 in increments of 64"

  # ---------------------------------------------------------------------------
  # Application Settings

  ApiPathBase:
    Type: String
    Description: "The path API Gateway uses as the first segment in the invoked Uniform Resource Identifier (URI). Since API Gateway generates random characters for the domain, it can be helpful to use this in identifying applications and stages. If a custom domain is used it can be masked and hidden from visitors. For example: xyz08ryz.apigateway.aws.com/pets or xyz08ryz.apigateway.aws.com/myapp or xyz08ryz.apigateway.aws.com/myapp-test. It is recommended you set this in the template-config.json file and allow the stage to be dynamically appended."
    Default: "api"
    AllowedPattern: ^[a-z0-9]([a-z0-9-_]*[a-z0-9])?$
    MaxLength: 128
    MinLength: 1
    ConstraintDescription: "1-128 lowercase alpha numeric, hyphens, and underscores. Must begin and end with an alphanumeric character."
  LogRetentionInDaysForPROD:
    Type: Number
    Description: "How long should CloudWatch logs be kept in a PRODUCTION environment?"
    Default: 90
    AllowedValues: [1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653]
  LogRetentionInDaysForDEVTEST:
    Type: Number
    Description: "How long should CloudWatch logs be kept in a DEV or TEST environment?"
    Default: 7
    AllowedValues: [1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653]

  # ---------------------------------------------------------------------------
  # Cache-Data Parameters
  # From: https://www.npmjs.com/package/@chadkluck/cache-data

  CacheDataDbMaxCacheSizeInKB:
    Type: Number
    Description: "DynamoDb does better when storing smaller pieces of data. Choose the cut-off in KB that large objects should be stored in S3 instead (10)"
    Default: 10
    MinValue: 10
    MaxValue: 200
    ConstraintDescription: "Numeric value between 10 and 200 (inclusive)"
  CacheDataCryptIdHashAlgorithm:
    Type: String
    Description: "Hash algorithm used for generating the URI ID to identify cached requests. This is for generating IDs, not crypto."
    Default: "RSA-SHA256"
    AllowedValues: ["RSA-SHA256", "RSA-SHA3-224", "RSA-SHA3-256", "RSA-SHA3-384", "RSA-SHA3-512"]
    ConstraintDescription: "Use possible hashes available from Node.js in the RSA- category (RSA-SHA256 to RSA-SM3)"
  CacheDataCryptSecureDataAlg:
    Type: String
    Description: "Cryptographic algorithm to use for storing sensitive cached data in S3 and DynamoDb"
    Default: "aes-256-cbc"
    AllowedValues: ["aes-256-cbc", "aes-256-cfb", "aes-256-cfb1", "aes-256-cfb8", "aes-256-ofb"]
    ConstraintDescription: "Use possible cipher algorithms available (crypto.getCiphers()) from Node.js in the aes-256-xxx category"
  CacheDataErrorExpirationInSeconds:
    Type: Number
    Description: "How long should errors be cached? This prevents retrying a service that is currenlty in error too often (300 is recommended)"
    Default: 300
    MinValue: 1
    ConstraintDescription: "Choose a value of 1 or greater"
  CacheDataPurgeExpiredCacheEntriesInHours:
    Type: Number
    Description: "The number of hours expired cached data should be kept before purging. Expired cache data may be used if the source returns an error."
    Default: 24
    MinValue: 1
    ConstraintDescription: "Choose a value of 1 or greater"
  CacheDataPurgeAgeOfCachedBucketObjInDays:
    Type: Number
    Description: "Similar to CacheData_PurgeExpiredCacheEntriesInHours, but for the S3 Bucket. S3 calculates from time object is created/last modified (not accessed). This should be longer than your longest cache expiration set in custom/policies. Keeping objects in S3 for too long increases storage costs. (30 is recommended)"
    Default: 15
    MinValue: 3
    ConstraintDescription: "Choose a value of 3 days or greater. This should be slightly longer than the longest cache expiration expected"
  CacheDataTimeZoneForInterval:
    Type: String
    Description: "Cache-Data may expire using an interval such as every four, six, twelve, ... hours on the hour starting at midnight. What timezone holds the midnight to calculate from?"
    Default: "Etc/UTC"
    AllowedValues: ["Etc/UTC", "America/Puerto_Rico", "America/New_York", "America/Indianapolis", "America/Chicago", "America/Denver", "America/Phoenix", "America/Los_Angeles", "America/Anchorage", "Pacific/Honolulu"] # https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
    ConstraintDescription: "Common examples for United States of America. Accepted values can be changed in the template for your region."
  CacheDataAWSXRayOn:
    Type: String
    Description: "Turn on AWS XRay tracing for Cache-Data"
    Default: "false"
    AllowedValues: ["true", "false"]
    ConstraintDescription: "Accepted values are true or false"

# =============================================================================
# CONDITIONS
# -----------------------------------------------------------------------------
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-conditions.html
#

Conditions:
  IsProduction: !Equals [!Ref DeployEnvironment, "PROD"]
  IsNotProduction: !Not [!Equals [!Ref DeployEnvironment, "PROD"]]
  IsTest: !Equals [!Ref DeployEnvironment, "TEST"]
  IsDevelopment: !Equals [!Ref DeployEnvironment, "DEV"]
  CreateProdResources: !Equals [!Ref DeployEnvironment, "PROD"]
  CreateTestResources: !Equals [!Ref DeployEnvironment, "TEST"]
  CreateDevResources: !Equals [!Ref DeployEnvironment, "DEV"]
  UseS3BucketNameOrgPrefix: !Not [!Equals [!Ref S3BucketNameOrgPrefix, ""]]
  CreateAlarms: !Equals [!Ref DeployEnvironment, "PROD"] # !Equals ["ALWAYS", "ALWAYS"] # Option if you want to ALWAYS create an alarm or only in PROD. Alarms cost money so you may only want them in Prod (or temporarily in test)

# =============================================================================
# GLOBALS
# -----------------------------------------------------------------------------
# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-specification-template-anatomy-globals.html
#

Globals:
  # Function:

  Api:
    OpenApiVersion: 3.0.0 # Prevents extra stage called Stage in API Gateway https://www.internetkatta.com/how-to-prevent-aws-sam-from-creating-the-default-stage-in-api-gateway-stage

# =============================================================================
# RESOURCES
# -----------------------------------------------------------------------------
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html  
#

Resources:

  # ---------------------------------------------------------------------------
  # API Gateway

  # -- API Gateway --
  WebApi:
    Type: AWS::Serverless::Api
    Properties: 
      Name: !Sub '${Prefix}-${ProjectId}-${StageId}-WebApi'
      StageName: !Ref ApiPathBase
      PropagateTags: True
      TracingEnabled: True

      DefinitionBody:
        "Fn::Transform":
          Name: "AWS::Include"
          Parameters:
            Location: ./template-swagger.yml

  # ---------------------------------------------------------------------------
  # Lambda

  # -- Lambda Function --
  AppFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${Prefix}-${ProjectId}-${StageId}-AppFunction'
      Description: "Web Service"
      VersionDescription: "Web Service Version Notes v0" # Use this To Overcome AliasLive Update Errors - Rarely need to update
      AutoPublishCodeSha256: "20240606141100" # Use this To Overcome AliasLive Update Errors - Rarely need to update
      AutoPublishAlias: live

      DeploymentPreference:
        Enabled: !If [ IsProduction, True,  False] #Gradual deployment only if in production so DEV and TEST aren't hindered
        Type: !If [ IsProduction, !Ref FunctionGradualDeploymentType, "AllAtOnce"]
        Role: !Ref DeployRole
        Alarms:
          Fn::If:
            - CreateAlarms
            - - !Ref AppFunctionErrorsAlarm
            - - !Ref 'AWS::NoValue'

      CodeUri: app/
      Handler: index.handler
      Runtime: nodejs18.x
      Timeout: !Ref FunctionTimeOutInSeconds
      MemorySize: !Ref FunctionMaxMemoryInMB
      Role: !GetAtt LambdaExecutionRole.Arn
      PropagateTags: True

      # Lambda Insights and X-Ray
      Tracing: Active # X-Ray
      # Required adding policy to deploy pipeline CF template for lambda layers
      Layers:
        - !Sub "arn:aws:lambda:${AWS::Region}:580247275435:layer:LambdaInsightsExtension:52" # Check for latest version: https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Lambda-Insights-extension-versionsx86-64.html
        - !Sub "arn:aws:lambda:${AWS::Region}:177933569100:layer:AWS-Parameters-and-Secrets-Lambda-Extension:11" # https://docs.aws.amazon.com/systems-manager/latest/userguide/ps-integration-lambda-extensions.html#ps-integration-lambda-extensions-add

      Environment:
        Variables:
          detailedLogs: !If [ IsProduction, "0",  "2"]
          deployEnvironment: !Ref DeployEnvironment
          paramStore: !Ref ParameterStoreHierarchy
          
          userAgentIdentifier: !Ref UserAgent
          lambdaTimeoutInSeconds: !Ref FunctionTimeOutInSeconds # so we can calculate any external connection timeout in our code

          # Cache-Data settings (from: https://www.npmjs.com/package/@chadkluck/cache-data)
          CacheData_DynamoDbTable: !Ref CacheDataDynamoDbTable
          CacheData_S3Bucket: !Ref CacheDataS3Bucket
          CacheData_CryptSecureDataAlgorithm: !Ref CacheDataCryptSecureDataAlg
          CacheData_CryptIdHashAlgorithm: !Ref CacheDataCryptIdHashAlgorithm
          CacheData_DynamoDb_maxCacheSize_kb: !Ref CacheDataDbMaxCacheSizeInKB
          CacheData_PurgeExpiredCacheEntriesAfterXHours: !Ref CacheDataPurgeExpiredCacheEntriesInHours
          CacheData_ErrorExpirationInSeconds: !Ref CacheDataErrorExpirationInSeconds
          CacheData_TimeZoneForInterval: !Ref CacheDataTimeZoneForInterval
          CacheData_AWSXRayOn: !Ref CacheDataAWSXRayOn

      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /
            Method: get
            RestApiId: !Ref WebApi
        PostEvent:
          Type: Api
          Properties:
            Path: /
            Method: post
            RestApiId: !Ref WebApi
            
      Role: !GetAtt LambdaExecutionRole.Arn

  # -- LambdaFunction Execution Role --

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${Prefix}-${ProjectId}-${StageId}-ExecutionRole"
      Description: "IAM Role that allows the Lambda permission to execute and access resources"
      Path: !Ref RolePath
      PermissionsBoundary: !If [HasPermissionsBoundaryARN, !Ref PermissionsBoundaryARN, !Ref 'AWS::NoValue' ]

      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: [lambda.amazonaws.com]
          Action: sts:AssumeRole

      # These are for application monitoring via LambdaInsights and X-Ray
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy'
        - 'arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess'

      # These are the resources your Lambda function needs access to
      # Logs, SSM Parameters, DynamoDb, S3, etc.
      # Define specific actions such as get/put (read/write)
      Policies:
      - PolicyName: LambdaResourceAccessPolicies
        PolicyDocument:
          Statement:

          - Sid: LambdaAccessToWriteLogs
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Effect: Allow
            Resource: !GetAtt AppLogGroup.Arn

          - Sid: LambdaAccessToSSMParameters
            Action:
            - ssm:DescribeParameters
            - ssm:GetParameters
            - ssm:GetParameter
            - ssm:GetParametersByPath
            Effect: Allow
            Resource: 
            - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter${ParameterStoreHierarchy}*"

          # cache-data S3 bucket (from: https://www.npmjs.com/package/@chadkluck/cache-data)
          - Sid: LambdaAccessToS3BucketCacheData
            Action:
            - s3:PutObject
            - s3:GetObject
            - s3:GetObjectVersion
            Effect: Allow
            Resource: !Join [ '', [ !GetAtt CacheDataS3Bucket.Arn, '/cache/*' ] ]

          # cache-data DynamoDb table (from: https://www.npmjs.com/package/@chadkluck/cache-data)
          - Sid: LambdaAccessToDynamoDBTableCacheData
            Action:
            - dynamodb:GetItem
            - dynamodb:Scan
            - dynamodb:Query
            - dynamodb:BatchGetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:BatchWriteItem
            Effect: Allow
            Resource: !GetAtt CacheDataDynamoDbTable.Arn

  # -- Lambda permissions allowing API Gateway to Execute it --

  ConfigLambdaPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref AppFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${WebApi}/*

  # ---------------------------------------------------------------------------
  # Logging and Monitoring
  #

  # -- Log Group with a retention policy --

  AppLogGroup:
    Type: AWS::Logs::LogGroup
    Properties: 
        LogGroupName: !Sub '/aws/lambda/${Prefix}-${ProjectId}-${StageId}-AppFunction' # Avoid circular reference !Sub "/aws/lambda/${AppFunction}"
        RetentionInDays: !If [ IsProduction, !Ref LogRetentionInDaysForPROD,  !Ref LogRetentionInDaysForDEVTEST]

  # -- CloudWatch Dashboard --

  Fn::Transform:
    Name: AWS::Include
    Parameters:
      Location: ./template-dashboard.yml

  # -- Lambda Function Error Alarm --

  AppFunctionErrorsAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: CreateAlarms # Either PROD or ALWAYS - Check Conditions
    Properties:
      AlarmDescription: Lambda Function Error > 1
      MetricName: Errors
      Statistic: Sum
      ComparisonOperator: GreaterThanThreshold
      Threshold: 1
      Period: 900
      EvaluationPeriods: 1
      TreatMissingData: notBreaching
      Namespace: AWS/Lambda
      Dimensions:
        - Name: FunctionName
          Value: !Ref AppFunction
      AlarmActions:
        - Ref: AppFunctionErrorAlarmNotification

  # -- Lambda Function Notification for Error Alarm --

  AppFunctionErrorAlarmNotification:
      Type: AWS::SNS::Topic
      Condition: CreateAlarms # Either PROD or ALWAYS - Check Conditions
      Properties: 
        DisplayName: !Sub 'AWS-Alarm-${Prefix}-${ProjectId}-${StageId}'
        FifoTopic: false
        Subscription:
          - Endpoint: !Ref AlarmNotificationEmail
            Protocol: 'email'

  # -- ApiGateway Error Alarm --

  ApiGatewayErrorsAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: CreateAlarms # Either PROD or ALWAYS - Check Conditions
    Properties:
      AlarmDescription: API Gateway Error > 1
      MetricName: Errors
      Statistic: Sum
      ComparisonOperator: GreaterThanThreshold
      Threshold: 1
      Period: 900
      EvaluationPeriods: 1
      TreatMissingData: notBreaching
      Namespace: AWS/ApiGateway
      Dimensions:
        - Name: ApiName
          Value: !Ref WebApi
      AlarmActions:
        - Ref: AppFunctionErrorAlarmNotification

  # -- ApiGateway Notification for Error Alarm --

  ApiGatewayErrorAlarmNotification:
      Type: AWS::SNS::Topic
      Condition: CreateAlarms # Either PROD or ALWAYS - Check Conditions
      Properties: 
        DisplayName: !Sub 'AWS-Alarm-${Prefix}-${ProjectId}-${StageId}'
        FifoTopic: false
        Subscription:
          - Endpoint: !Ref AlarmNotificationEmail
            Protocol: 'email'
  
  # ---------------------------------------------------------------------------
  # Cache-Data
  # From: https://www.npmjs.com/package/@chadkluck/cache-data
  # Your Lambda function will need access via the Execution Role

  # -- Cache-Data DynamoDb Table --

  CacheDataDynamoDbTable:
    Type: AWS::DynamoDB::Table
    Description: Table to store Cache-Data. 
    Properties:
      TableName: !Sub '${Prefix}-${ProjectId}-${StageId}-CacheData'
      AttributeDefinitions: 
        - AttributeName: "id_hash"
          AttributeType: "S"
      KeySchema: 
        - AttributeName: "id_hash"
          KeyType: "HASH"
      TimeToLiveSpecification:
        AttributeName: "purge_ts"
        Enabled: true
      BillingMode: "PAY_PER_REQUEST" # Use PAY_PER_REQUEST for spikey Web Service Traffic


  # -- Cache-Data S3 Bucket --

  CacheDataS3Bucket:
    Type: AWS::S3::Bucket
    Description: S3 Bucket to store Cache-Data too big for DynamoDb. Cache-Data stores objects in /cache directory. The application may store additional data outside of the cache directory.
    Properties:
      BucketName: !Join
        - "-"
        - - !If [UseS3BucketNameOrgPrefix, !Sub "${S3BucketNameOrgPrefix}-${Prefix}", !Sub "${Prefix}-${AWS::Region}-${AWS::AccountId}" ]
          - !Sub "${ProjectId}-${StageId}-cachedata"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LifecycleConfiguration:
        Rules:
          - Id: "ExpireObjects"
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 1
            ExpirationInDays: !Ref CacheDataPurgeAgeOfCachedBucketObjInDays
            Prefix: "cache" # this will limit this policy to YOURBUCKETNAME/cache/*
            NoncurrentVersionExpirationInDays: !Ref CacheDataPurgeAgeOfCachedBucketObjInDays
            Status: "Enabled" # Enable only if you are going to use this LifecycleConfiguration

  # -- Cache-Data S3 Bucket Policy --

  CacheDataS3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref CacheDataS3Bucket
      PolicyDocument:
        Version: "2012-10-17"
        Id: SecurityPolicy
        Statement:
          - Sid: "DenyNonSecureTransportAccess"
            Effect: Deny
            Principal: "*"
            Action: "s3:*"
            Resource:
              - !GetAtt CacheDataS3Bucket.Arn
              - !Join [ '', [ !GetAtt CacheDataS3Bucket.Arn, '/*' ] ]
            Condition:
              Bool:
                "aws:SecureTransport": false

          # - Sid: WhitelistLambdaExecutionRole
          #   Action: "s3:*"
          #   Effect: Deny
          #   Principal: "*"
          #   Resource:
          #     - !GetAtt CacheDataS3Bucket.Arn
          #     - !Join [ '', [ !GetAtt CacheDataS3Bucket.Arn, '/*' ] ]
          #   Condition:
          #     StringNotEquals: {
          #       "aws:PrincipalArn": [
          #         !GetAtt LambdaExecutionRole.Arn,
          #       ]
          #     }


# =============================================================================
# OUTPUTS
# -----------------------------------------------------------------------------
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/outputs-section-structure.html
#
# Place anything interesting that you would like to quickly refer to in 
# your cloudformation OUTPUT section. Test URLs, direct links to resources, etc
#

Outputs:
  APIEndpoint:
    Description: "Endpoint URL"
    Value: !Sub "https://${WebApi}.execute-api.${AWS::Region}.amazonaws.com/${ApiPathBase}/"
  APIEndpointTest:
    Description: "Endpoint Test URL"
    Value: !Sub "https://${WebApi}.execute-api.${AWS::Region}.amazonaws.com/${ApiPathBase}/?q=Chicago"
  CloudWatchLogGroup:
    Description: "Cloud Watch Log Group for application"
    Value: !Sub "https://console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#logStream:group=%2Faws%2Flambda%2F${AppFunction}"
  CloudWatchDashboard:
    Condition: CreateProdResources
    Description: "Cloud Watch Dashboard (for production environments only)"
    Value: !Sub 'https://console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#dashboards:name=${Dashboard}'
  LambdaWebConsole:
    Description: "Lambda Web Console"
    Value: !Sub "https://console.aws.amazon.com/lambda/home?region=${AWS::Region}#/functions/${AppFunction}?tab=code"
  DynamoDbWebConsole:
    Description: "DynamoDb Table Web Console"
    Value: !Sub "https://console.aws.amazon.com/dynamodbv2/home?region=${AWS::Region}#table?name=${CacheDataDynamoDbTable}&initialTableGroup=%23all"
  S3BucketWebConsole:
    Description: "S3 Bucket Web Console"
    Value: !Sub "https://s3.console.aws.amazon.com/s3/buckets/${CacheDataS3Bucket}?region=${AWS::Region}"
  ParameterStore:
    Description: "SSM Parameter Store"
    Value: !Sub "https://${AWS::Region}.console.aws.amazon.com/systems-manager/parameters/?region=${AWS::Region}&tab=Table#list_parameter_filters=Name:Contains:${ParameterStoreHierarchy}"